//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.CompactFramework.Design.Data, Version 2.0.50727.3053.
// 
namespace NeoPocketUpdater.NeoFileSystemService {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="NeoFileSystemServiceSoap", Namespace="http://www.net.eti.br/services/NeoFileSystemService")]
    public partial class NeoFileSystemService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private ValidationSoapHeader validationSoapHeaderValueField;
        
        /// <remarks/>
        public NeoFileSystemService() {
            this.Url = "http://neo.eti.br/neofilesystemwebservice/neofilesystemservice.asmx";
        }
        
        public ValidationSoapHeader ValidationSoapHeaderValue {
            get {
                return this.validationSoapHeaderValueField;
            }
            set {
                this.validationSoapHeaderValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ValidationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.net.eti.br/services/NeoFileSystemService/DirList", RequestNamespace="http://www.net.eti.br/services/NeoFileSystemService", ResponseNamespace="http://www.net.eti.br/services/NeoFileSystemService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] DirList(string dir) {
            object[] results = this.Invoke("DirList", new object[] {
                        dir});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDirList(string dir, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DirList", new object[] {
                        dir}, callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndDirList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ValidationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.net.eti.br/services/NeoFileSystemService/FileList", RequestNamespace="http://www.net.eti.br/services/NeoFileSystemService", ResponseNamespace="http://www.net.eti.br/services/NeoFileSystemService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] FileList(string dir) {
            object[] results = this.Invoke("FileList", new object[] {
                        dir});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginFileList(string dir, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("FileList", new object[] {
                        dir}, callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndFileList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ValidationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.net.eti.br/services/NeoFileSystemService/Md5", RequestNamespace="http://www.net.eti.br/services/NeoFileSystemService", ResponseNamespace="http://www.net.eti.br/services/NeoFileSystemService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Md5(string input) {
            object[] results = this.Invoke("Md5", new object[] {
                        input});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginMd5(string input, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Md5", new object[] {
                        input}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndMd5(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ValidationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.net.eti.br/services/NeoFileSystemService/FileGet", RequestNamespace="http://www.net.eti.br/services/NeoFileSystemService", ResponseNamespace="http://www.net.eti.br/services/NeoFileSystemService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] FileGet(string filename) {
            object[] results = this.Invoke("FileGet", new object[] {
                        filename});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginFileGet(string filename, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("FileGet", new object[] {
                        filename}, callback, asyncState);
        }
        
        /// <remarks/>
        public byte[] EndFileGet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ValidationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.net.eti.br/services/NeoFileSystemService/FilePut", RequestNamespace="http://www.net.eti.br/services/NeoFileSystemService", ResponseNamespace="http://www.net.eti.br/services/NeoFileSystemService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FilePut([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] buffer, string filename) {
            this.Invoke("FilePut", new object[] {
                        buffer,
                        filename});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginFilePut(byte[] buffer, string filename, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("FilePut", new object[] {
                        buffer,
                        filename}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndFilePut(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.net.eti.br/services/NeoFileSystemService/hi6", RequestNamespace="http://www.net.eti.br/services/NeoFileSystemService", ResponseNamespace="http://www.net.eti.br/services/NeoFileSystemService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string hi6() {
            object[] results = this.Invoke("hi6", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginhi6(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("hi6", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string Endhi6(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
    }
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.net.eti.br/services/NeoFileSystemService")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://www.net.eti.br/services/NeoFileSystemService", IsNullable=false)]
    public partial class ValidationSoapHeader : System.Web.Services.Protocols.SoapHeader {
        
        private string directoryField;
        
        private string passwordField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string Directory {
            get {
                return this.directoryField;
            }
            set {
                this.directoryField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
}
