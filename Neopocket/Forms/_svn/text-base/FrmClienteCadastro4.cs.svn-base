using System;
using System.Windows.Forms;
using Neopocket.Utils;

namespace Neopocket.Forms
{
    /// <summary>
    /// Quarta tela de cadastro do cliente
    /// </summary>
    public partial class FrmClienteCadastro4 : FormBase
    {
        #region [ Construtor ]

        public FrmClienteCadastro4()
        {
            InitializeComponent();
            notification.Caption = "Neo";
        }

        #endregion

        #region [ Fase anterior ]

        private void btnAnterior_Click(object sender, EventArgs e)
        {
            Util.FormExibir(new FrmClienteCadastro3());
            this.Close();
        }

        #endregion

        #region [ Salvar ]

        private void btnSalvar_Click(object sender, EventArgs e)
        {
            inputPanel.Enabled = false;
            Concluir();
        }

        #endregion

        #region [ Validação ]

        /// <summary>
        /// Validação dos campos do formulário
        /// </summary>
        /// <returns>Boolean</returns>
        private Boolean ValidaCampos()
        {
            Boolean result = true;

            if (!Validator.IsInt(txtAgencia.Text))
            {
                notification.Text = "Agência do banco inválida, digite apenas números";
                notification.Visible = true;
                return false;
            }

            if (!Validator.IsInt(txtRefBanco.Text))
            {
                notification.Text = "Referência do banco inválida, digite apenas números";
                notification.Visible = true;
                return false;
            }

            return result;
        }

        #endregion

        #region [ Cancelamento ]

        private void mnuCancelar_Click(object sender, EventArgs e)
        {
            inputPanel.Enabled = false;
            DialogResult result = MessageBox.Show("Deseja realmente cancelar o cadastro?", "Neo", MessageBoxButtons.YesNo, MessageBoxIcon.Question, MessageBoxDefaultButton.Button2);
            if (result == DialogResult.Yes)
                this.Close();
        }

        #endregion

        #region [ Load ]

        private void FrmClienteCadastro4_Load(object sender, EventArgs e)
        {
            if (Globals.APP_ACAO == Neopocket.Utils.Enums.Acao.ClienteCadastro)
            {
                btnSalvar.Text = "Inserir";
            }
            else if (Globals.APP_ACAO == Neopocket.Utils.Enums.Acao.ClienteEdicao)
            {
                btnSalvar.Text = "Atualizar";
            }

            this.Carregar();
        }

        #endregion

        #region [ Carrega as informações do cliente ]

        public void Carregar()
        {
            if (Globals.Cliente.RefBanco != 0)
            {
                txtRefBanco.Text = Convert.ToString(Globals.Cliente.RefBanco);
            }
            if (Globals.Cliente.Agencia != 0)
            {
                txtAgencia.Text = Convert.ToString(Globals.Cliente.Agencia);
            }
            if (!String.IsNullOrEmpty(Globals.Cliente.TelefoneAgencia))
            {
                txtTelefone.Text = Globals.Cliente.TelefoneAgencia;
            }
            if (!String.IsNullOrEmpty(Globals.Cliente.RefComercial1))
            {
                txtRefComercial1.Text = Globals.Cliente.RefComercial1;
            }
            if (!String.IsNullOrEmpty(Globals.Cliente.TelefoneComercial1))
            {
                txtTelefone1.Text = Globals.Cliente.TelefoneComercial1;
            }
            if (!String.IsNullOrEmpty(Globals.Cliente.RefComercial2))
            {
                txtRefComercial2.Text = Globals.Cliente.RefComercial2;
            }
            if (!String.IsNullOrEmpty(Globals.Cliente.TelefoneComercial2))
            {
                txtTelefone.Text = Globals.Cliente.TelefoneComercial2;
            }
        }

        #endregion

        #region [ Conclusão da fase ]

        private void Concluir()
        {
            try
            {
                if (String.IsNullOrEmpty(txtRefBanco.Text))
                {
                    Globals.Cliente.RefBanco = 0;
                }
                else Globals.Cliente.RefBanco = Convert.ToInt32(txtRefBanco.Text);

                if (String.IsNullOrEmpty(txtAgencia.Text))
                {
                    Globals.Cliente.Agencia = 0;
                }
                else Globals.Cliente.Agencia = Convert.ToInt32(txtAgencia.Text);

                Globals.Cliente.TelefoneAgencia = txtTelefone.Text;
                Globals.Cliente.RefComercial1 = txtRefComercial1.Text;
                Globals.Cliente.TelefoneComercial1 = txtTelefone1.Text;
                Globals.Cliente.RefComercial2 = txtRefComercial2.Text;
                Globals.Cliente.TelefoneComercial2 = txtTelefone.Text;

                if (Globals.APP_ACAO == Neopocket.Utils.Enums.Acao.ClienteCadastro)
                {
                    if (Globals.Cliente.Inserir())
                    {
                        MessageBox.Show("Cadastro efetuado com sucesso!");
                    }
                    else
                    {
                        MessageBox.Show("Dados não cadastrados!");
                    }
                }
                if (Globals.APP_ACAO == Neopocket.Utils.Enums.Acao.ClienteEdicao)
                {
                    if (Globals.Cliente.Atualizar(Globals.Cliente.Id))
                    {
                        MessageBox.Show("Atualização efetuada com sucesso!");
                    }
                    else
                    {
                        MessageBox.Show("Dados não atualizados!");
                    }
                }

                this.Close();
            }
            catch (Exception ex)
            {
                LogBuilder.Append(Globals.APP_LOGDIRECTORY + Globals.APP_LOG_EXCEPTIONFILENAME, ex.Message, true);
                FE.Show(ex);
            }
        }

        #endregion
    }
}
